[{"/home/bluesman/repos/odin-book/odin-book/src/index.js":"1","/home/bluesman/repos/odin-book/odin-book/src/App.js":"2","/home/bluesman/repos/odin-book/odin-book/src/components/Login.js":"3","/home/bluesman/repos/odin-book/odin-book/src/components/CreatePost.js":"4","/home/bluesman/repos/odin-book/odin-book/src/components/SearchResults.js":"5","/home/bluesman/repos/odin-book/odin-book/src/components/Timeline.js":"6","/home/bluesman/repos/odin-book/odin-book/src/components/SignUp.js":"7","/home/bluesman/repos/odin-book/odin-book/src/components/Profile.js":"8","/home/bluesman/repos/odin-book/odin-book/src/components/EditPost.js":"9","/home/bluesman/repos/odin-book/odin-book/src/components/Post.js":"10","/home/bluesman/repos/odin-book/odin-book/src/components/Comment.js":"11","/home/bluesman/repos/odin-book/odin-book/src/components/CreateComment.js":"12","/home/bluesman/repos/odin-book/odin-book/src/components/MyProfile.js":"13","/home/bluesman/repos/odin-book/odin-book/src/components/Contacts.js":"14","/home/bluesman/repos/odin-book/odin-book/src/components/Chat.js":"15","/home/bluesman/repos/odin-book/odin-book/src/components/Chats.js":"16","/home/bluesman/repos/odin-book/odin-book/src/components/HeaderContent.js":"17","/home/bluesman/repos/odin-book/odin-book/src/components/socket.js":"18","/home/bluesman/repos/odin-book/odin-book/src/components/ContactItem.js":"19"},{"size":700,"mtime":1677066431577,"results":"20","hashOfConfig":"21"},{"size":5172,"mtime":1677610037407,"results":"22","hashOfConfig":"21"},{"size":2105,"mtime":1678821599018,"results":"23","hashOfConfig":"21"},{"size":1526,"mtime":1676903138155,"results":"24","hashOfConfig":"21"},{"size":731,"mtime":1677584063682,"results":"25","hashOfConfig":"21"},{"size":3367,"mtime":1676979358042,"results":"26","hashOfConfig":"21"},{"size":2107,"mtime":1676903180391,"results":"27","hashOfConfig":"21"},{"size":3502,"mtime":1677609378471,"results":"28","hashOfConfig":"21"},{"size":2056,"mtime":1677599117420,"results":"29","hashOfConfig":"21"},{"size":4354,"mtime":1677599155608,"results":"30","hashOfConfig":"21"},{"size":1049,"mtime":1677584734814,"results":"31","hashOfConfig":"21"},{"size":1377,"mtime":1676903193435,"results":"32","hashOfConfig":"21"},{"size":4476,"mtime":1677581873590,"results":"33","hashOfConfig":"21"},{"size":537,"mtime":1677267190076,"results":"34","hashOfConfig":"21"},{"size":4550,"mtime":1677609214515,"results":"35","hashOfConfig":"21"},{"size":1281,"mtime":1677584560502,"results":"36","hashOfConfig":"21"},{"size":7141,"mtime":1678791341572,"results":"37","hashOfConfig":"21"},{"size":185,"mtime":1678732533044,"results":"38","hashOfConfig":"21"},{"size":1998,"mtime":1677584545574,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1ejxxws",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"43"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"43"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"94","usedDeprecatedRules":"43"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"43"},"/home/bluesman/repos/odin-book/odin-book/src/index.js",[],[],[],"/home/bluesman/repos/odin-book/odin-book/src/App.js",["105","106","107"],[],"/home/bluesman/repos/odin-book/odin-book/src/components/Login.js",[],[],"/home/bluesman/repos/odin-book/odin-book/src/components/CreatePost.js",["108"],[],"import { useState } from \"react\";\n\nfunction CreatePost(props) {\n  const [content, setContent] = useState(\"\");\n\n  async function postBlogPost() {\n    try {\n      await fetch(`http://localhost:3000/post/create?user=${props.user._id}`, {\n        method: \"POST\",\n        body: JSON.stringify({\n          content: content,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n        .then((res) => {\n          return res.json();\n        })\n        .then((data) => {\n          //add the new post to posts state\n          props.closeModal();\n          window.location.reload(false);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const handleSubmit = (event) => {\n    event.target.reset();\n    event.preventDefault(); // üëàÔ∏è prevent page refresh\n    postBlogPost();\n    setContent(\"\");\n    // üëáÔ∏è clear all input values in the form\n  };\n\n  return (\n    <div className=\"CreatePost\">\n      <div>\n        <img className=\"profile-img\" src={props.user.img_url} />\n        <div>What's on your mind, {props.user.first_name} ?</div>\n      </div>\n      <form className=\"post-form\" onSubmit={handleSubmit}  autoComplete=\"off\">\n        <label htmlFor=\"content\"></label>\n        <textarea\n          placeholder=\"Write something...\"\n          name=\"content\"\n          required\n          onChange={(event) => setContent(event.target.value)}\n        ></textarea>\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreatePost;\n","/home/bluesman/repos/odin-book/odin-book/src/components/SearchResults.js",["109"],[],"import { useNavigate } from \"react-router-dom\";\nimport \"../styles/SearchResults.css\";\n\nfunction SearchResults(props) {\n  const navigate = useNavigate();\n  return (\n    <div className=\"SearchResults\">\n            {(! props.users || !props.users.length) && <div>No results</div>}\n      {props.users &&\n        props.users.map((user, i) => {\n          return (\n            <div\n              onClick={() => {\n                navigate(process.env.PUBLIC_URL + `/user/${user._id}/profile`);\n              }}\n            >\n              <img src={user.img_url}></img>\n              <span key={i}>{user.first_name + \" \" + user.last_name}</span>\n            </div>\n          );\n        })}\n    </div>\n  );\n}\n\nexport default SearchResults;\n","/home/bluesman/repos/odin-book/odin-book/src/components/Timeline.js",["110","111","112","113"],[],"import Post from \"./Post\";\nimport { useEffect, useState } from \"react\";\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\";\nimport React from \"react\";\nimport Modal from \"react-modal\";\nimport CreatePost from \"./CreatePost\";\nimport EditPost from \"./EditPost\";\nimport \"../styles/Timeline.css\";\nimport Contacts from \"./Contacts\";\n\nconst customStyles = {\n  content: {\n    top: \"30%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: \"fit-content\",\n    padding: \"1rem .5rem\",\n  },\n};\n\nfunction Timeline(props) {\n  const [posts, setPosts] = useState([]);\n  const [postContent, setPostContent] = useState(\"\");\n  const [post_id, setPost_id] = useState(null);\n  const [modalType, setModalType] = useState(\"edit\");\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  const navigate = useNavigate();\n  const params = useParams();\n\n  async function fetchPosts() {\n    await fetch(`http://localhost:3000/user/${props.user._id}/timeline-posts`)\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        setPosts(data)\n      });\n  }\n\n  useEffect(() => {\n    fetchPosts();\n    // Sort\n    let posts_sorted = [...posts];\n    posts_sorted.sort((a,b) => a.date - b.date ? -1 : 1);\n    setPosts(posts_sorted)\n  }, [] );\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n  }\n\n  function closeModal() {\n    setModalType(\"edit\");\n    setIsOpen(false);\n  }\n\n  if (props.user === null)\n    return <Navigate to={process.env.PUBLIC_URL + \"/login\"} />;\n\n  return (\n    <div className=\"Timeline\">\n      <div className=\"posts\">\n        <div className=\"new-post\"\n          onClick={() => {\n            setModalType(\"create\");\n            openModal();\n          }}\n        >\n         <img className=\"profile-img\" src={props.user.img_url}/>\n         <div>What's on your mind, {props.user.first_name} ?</div>\n        </div>\n        {posts !== null &&<div >{\n          posts.map((data, i) => {\n            return (\n              <Post\n                user={props.user}\n                post={data}\n                key={i}\n                openModal={openModal}\n                setPostContent={setPostContent}\n                setPost_id={setPost_id}\n              />\n            );\n          })}</div>}\n      </div>\n      <Contacts user={props.user} friends={props.friends} setChatList={props.setChatList} isInChatList = {props.isInChatList}/>\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Example Modal\"\n        ariaHideApp={false}\n      >\n        <div className=\"post-modal-content\">\n          {modalType === \"edit\" && (\n            <EditPost\n              user={props.user}\n              postContent={postContent}\n              post_id={post_id}\n              posts={posts}\n              setPosts={setPosts}\n              closeModal={closeModal}\n            />\n          )}\n          {modalType === \"create\" && (\n            <CreatePost\n              user={props.user}\n              setPosts={setPosts}\n              closeModal={closeModal}\n            />\n          )}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\nexport default React.memo(Timeline);\n","/home/bluesman/repos/odin-book/odin-book/src/components/SignUp.js",[],[],"/home/bluesman/repos/odin-book/odin-book/src/components/Profile.js",["114","115","116","117","118"],[],"/home/bluesman/repos/odin-book/odin-book/src/components/EditPost.js",["119","120","121"],[],"/home/bluesman/repos/odin-book/odin-book/src/components/Post.js",["122","123","124","125"],[],"/home/bluesman/repos/odin-book/odin-book/src/components/Comment.js",["126","127"],[],"import \"../styles/Comment.css\"\nimport { format } from \"date-fns\";\nimport { useEffect, useState } from \"react\";\n\nfunction Comment(props) {\n  const [author, setAuthor] = useState(null);\n  async function fetchAuthor() {\n    await fetch(\n      `http://localhost:3000/user/${props.comment.author_id}/details`\n    )\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        setAuthor(data);\n      });\n  }\n\n  useEffect(()=>{\n    fetchAuthor()\n  },[])\n\n  return (\n    <div className=\"Comment\">\n         <div>\n            {author && <div className=\"author\"><img className=\"profile-img\" src={author.img_url}/>{author.first_name + \" \" + author.last_name}</div>}\n                     <div className=\"date\">\n                         <div>{format(new Date(props.comment.date), 'H:mm' )}</div>\n                         <div>{format(new Date(props.comment.date), 'MM/dd/yy' )}</div>\n                     </div>\n         </div>\n        <div className=\"content\">{props.comment.content}</div>\n    </div>\n  );\n}\n\nexport default Comment;","/home/bluesman/repos/odin-book/odin-book/src/components/CreateComment.js",[],[],"/home/bluesman/repos/odin-book/odin-book/src/components/MyProfile.js",["128","129"],[],"import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPenToSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport Post from \"./Post\";\nimport Modal from \"react-modal\";\nimport CreatePost from \"./CreatePost\";\nimport EditPost from \"./EditPost\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\n\nfunction MyProfile(props) {\n  const [user, setUser] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [postContent, setPostContent] = useState(\"\");\n  const [imgUrl, SetImgUrl] = useState(\"\");\n  const [post_id, setPost_id] = useState(null);\n  const [modalType, setModalType] = useState(\"\");\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  const params = useParams();\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n  }\n\n  function closeModal() {\n    setModalType(\"\");\n    setIsOpen(false);\n  }\n\n  function openPostModal(){\n    openModal()\n    setModalType('edit')\n  }\n\n  async function fetchPosts(user_id) {\n    await fetch(`http://localhost:3000/user/${user_id}/posts`)\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        setPosts(data);\n      });\n  }\n\n  async function updateProfilePic(user_id){\n      await fetch(\n        `http://localhost:3000/user/${user_id}/img_url/update?img_url=${imgUrl}`,\n        {\n          method: \"PUT\",\n        }\n      ).then((data) => {\n        props.setUpdateUser(true);\n        closeModal();\n      });\n  }\n\n  const handleSubmit = (event) => {\n    event.target.reset();\n    event.preventDefault(); // üëàÔ∏è prevent page refresh\n    if(imgUrl)updateProfilePic(params.id)\n    SetImgUrl(\"\");    // üëáÔ∏è clear all input values in the form\n  };\n\n  useEffect(() => {\n    async function fetchUser() {\n      await fetch(`http://localhost:3000/user/${params.id}`)\n        .then((res) => {\n          return res.json();\n        })\n        .then((data) => {\n          setUser(data);\n        });\n    }\n    fetchUser();\n    fetchPosts(params.id);\n  }, []);\n\n  return (\n    <div className=\"MyProfile\">\n      {user && (\n        <div>\n          <div className=\"avatar\">\n            <div>\n              <img src={user.img_url} />\n              <FontAwesomeIcon\n                icon={faPenToSquare}\n                onClick={() => {\n                  setModalType(\"profile\");\n                  openModal();\n                }}\n              />\n            </div>\n            <h1>{user.first_name + \" \" + user.last_name}</h1>\n          </div>\n          <h2>{user.email}</h2>\n        </div>\n      )}\n      {posts !== null && (\n        <div className=\"posts\">\n          {posts.map((post, i) => {\n            return (\n              <Post\n                user={props.user}\n                post={post}\n                key={i}\n                openModal={openPostModal}\n                setPostContent={setPostContent}\n                setPost_id={setPost_id}\n              />\n            );\n          })}\n        </div>\n      )}\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Example Modal\"\n        ariaHideApp={false}\n      >\n       <div className=\"post-modal-content\"> {modalType === \"edit\" && (\n          <EditPost\n          user={props.user}\n            postContent={postContent}\n            post_id={post_id}\n            posts={posts}\n            setPosts={setPosts}\n            closeModal={closeModal}\n          />\n        )}\n        {modalType === \"create\" && (\n          <CreatePost\n            user={props.user}\n            setPosts={setPosts}\n            closeModal={closeModal}\n          />\n        )}\n        {modalType === \"profile\" && (\n          <form  onSubmit={handleSubmit}  autoComplete=\"off\">\n            <label htmlFor=\"content\"></label>\n            <input\n              placeholder=\"Paste image url here...\"\n              name=\"content\"\n              required\n              onChange={(event) => SetImgUrl(event.target.value)}\n            ></input>\n            <button type=\"submit\">Submit</button>\n          </form>\n        )}\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\nexport default MyProfile;\n","/home/bluesman/repos/odin-book/odin-book/src/components/Contacts.js",[],[],"/home/bluesman/repos/odin-book/odin-book/src/components/Chat.js",["130","131","132"],[],"/home/bluesman/repos/odin-book/odin-book/src/components/Chats.js",["133","134","135"],[],"import Chat from \"./Chat\";\nimport \"../styles/Chats.css\";\nimport {SocketContext} from './socket';\nimport { useContext, useEffect } from \"react\";\n\nfunction Chats(props) {\n\n  const socket = useContext(SocketContext);\n\n  const joinRoom = (room) => {\n    socket.emit(\"join_room\", room);\n  \n};\n\n  async function joinRooms() {\n    try {\n      await fetch(\n        `http://localhost:3000/user/${props.user._id}/chats`\n      )\n        .then((res) => {\n          return res.json();\n        })\n        .then((data) => {\n          data.map((item)=>{\n          joinRoom(item._id)\n          })\n        });\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  function removeChat(id) {\n    props.setChatList(\n      props.chatList.filter(function (chat) {\n        return chat.id !== id;\n      })\n    );\n  }\n\n  useEffect(() => {\n    if(props.user)joinRooms()\n  },[props.user]);\n\n  return (\n    <div className=\"Chats\">\n      {props.chatList &&\n        props.chatList\n          .map((item, i) => {\n            return (\n              <Chat\n                key={i}\n                data={item}\n                removeChat={removeChat}\n                user={props.user}\n              />\n            );\n          })          .slice(-3)\n          .reverse()}\n    </div>\n  );\n}\n\nexport default Chats;\n","/home/bluesman/repos/odin-book/odin-book/src/components/HeaderContent.js",["136","137","138","139","140"],[],"/home/bluesman/repos/odin-book/odin-book/src/components/socket.js",[],[],"/home/bluesman/repos/odin-book/odin-book/src/components/ContactItem.js",["141","142"],[],"import { useEffect, useState, useContext } from \"react\";\nimport { SocketContext } from \"./socket\";\n\nfunction ContactItem(props) {\n  const socket = useContext(SocketContext);\n\n  const item = props.item;\n\n  const [chat, setChat] = useState(null);\n  const [unreadMessages, setUnreadMessages] = useState(0);\n\n  async function fetchChat(item) {\n    try {\n      await fetch(\n        `http://localhost:3000/chat/find?users=${props.user._id}&users=${item._id}`\n      )\n        .then((res) => {\n          return res.json();\n        })\n        .then((data) => {\n          setChat(data);\n          if (data.messages.length) {\n            setUnreadMessages(\n              data.messages.filter(\n                (item) => !item.read_by.includes(props.user._id)\n              ).length\n            );\n          }\n        });\n    } catch (error) {}\n  }\n\n async function markAllAsRead() {\n    await fetch(\n      `http://localhost:3000/chat/${chat._id}/read-all?user_id=${props.user._id}`,\n      {\n        method: \"PUT\",\n      }\n    );\n  }\n\n  useEffect(() => {\n    if (item) fetchChat(item);\n\n    socket.on(\"receive_message\", (data) => {\n      if (!props.isInChatList(item._id)) fetchChat(item);\n    });\n\n    return () => {\n      socket.off(\"receive_message\");\n    };\n  }, []);\n\n  return (\n    <div\n      className=\"ContactItem\"\n      onClick={() => {\n        if (!props.isInChatList(item._id)) {\n          markAllAsRead();\n          setUnreadMessages(0);\n          props.setChatList((current) => [\n            ...current,\n            {\n              id: item._id,\n              name: item.first_name + \" \" + item.last_name,\n              img_url: item.img_url,\n              chat_id: chat._id,\n            },\n          ]);\n        }\n      }}\n    >\n      <div className=\"user\">\n        <img src={item.img_url}></img>\n        <div>{item.first_name + \" \" + item.last_name} </div>\n        {unreadMessages > 0 && <div className=\"alert\">{unreadMessages} </div>}\n      </div>\n    </div>\n  );\n}\n\nexport default ContactItem;\n",{"ruleId":"143","severity":1,"message":"144","line":109,"column":6,"nodeType":"145","endLine":109,"endColumn":8,"suggestions":"146"},{"ruleId":"143","severity":1,"message":"147","line":120,"column":6,"nodeType":"145","endLine":120,"endColumn":12,"suggestions":"148"},{"ruleId":"143","severity":1,"message":"144","line":125,"column":6,"nodeType":"145","endLine":125,"endColumn":18,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":41,"column":9,"nodeType":"152","endLine":41,"endColumn":65},{"ruleId":"150","severity":1,"message":"151","line":17,"column":15,"nodeType":"152","endLine":17,"endColumn":39},{"ruleId":"153","severity":1,"message":"154","line":31,"column":9,"nodeType":"155","messageId":"156","endLine":31,"endColumn":17},{"ruleId":"153","severity":1,"message":"157","line":32,"column":9,"nodeType":"155","messageId":"156","endLine":32,"endColumn":15},{"ruleId":"143","severity":1,"message":"158","line":50,"column":6,"nodeType":"145","endLine":50,"endColumn":8,"suggestions":"159"},{"ruleId":"150","severity":1,"message":"151","line":77,"column":10,"nodeType":"152","endLine":77,"endColumn":65},{"ruleId":"143","severity":1,"message":"160","line":45,"column":6,"nodeType":"145","endLine":45,"endColumn":14,"suggestions":"161"},{"ruleId":"162","severity":1,"message":"163","line":48,"column":38,"nodeType":"164","messageId":"165","endLine":48,"endColumn":40},{"ruleId":"162","severity":1,"message":"163","line":54,"column":35,"nodeType":"164","messageId":"165","endLine":54,"endColumn":37},{"ruleId":"162","severity":1,"message":"163","line":60,"column":42,"nodeType":"164","messageId":"165","endLine":60,"endColumn":44},{"ruleId":"150","severity":1,"message":"151","line":96,"column":13,"nodeType":"152","endLine":96,"endColumn":37},{"ruleId":"153","severity":1,"message":"157","line":5,"column":9,"nodeType":"155","messageId":"156","endLine":5,"endColumn":15},{"ruleId":"162","severity":1,"message":"163","line":33,"column":18,"nodeType":"164","messageId":"165","endLine":33,"endColumn":20},{"ruleId":"150","severity":1,"message":"151","line":60,"column":9,"nodeType":"152","endLine":60,"endColumn":65},{"ruleId":"153","severity":1,"message":"166","line":8,"column":10,"nodeType":"155","messageId":"156","endLine":8,"endColumn":21},{"ruleId":"143","severity":1,"message":"167","line":59,"column":6,"nodeType":"145","endLine":59,"endColumn":8,"suggestions":"168"},{"ruleId":"143","severity":1,"message":"169","line":66,"column":6,"nodeType":"145","endLine":66,"endColumn":14,"suggestions":"170"},{"ruleId":"150","severity":1,"message":"151","line":73,"column":13,"nodeType":"152","endLine":73,"endColumn":63},{"ruleId":"143","severity":1,"message":"171","line":21,"column":5,"nodeType":"145","endLine":21,"endColumn":7,"suggestions":"172"},{"ruleId":"150","severity":1,"message":"151","line":26,"column":48,"nodeType":"152","endLine":26,"endColumn":99},{"ruleId":"143","severity":1,"message":"173","line":92,"column":6,"nodeType":"145","endLine":92,"endColumn":8,"suggestions":"174"},{"ruleId":"150","severity":1,"message":"151","line":100,"column":15,"nodeType":"152","endLine":100,"endColumn":41},{"ruleId":"175","severity":1,"message":"176","line":44,"column":11,"nodeType":"177","messageId":"178","endLine":55,"endColumn":19,"fix":"179"},{"ruleId":"143","severity":1,"message":"180","line":95,"column":6,"nodeType":"145","endLine":95,"endColumn":8,"suggestions":"181"},{"ruleId":"150","severity":1,"message":"151","line":114,"column":11,"nodeType":"152","endLine":114,"endColumn":65},{"ruleId":"162","severity":1,"message":"163","line":24,"column":26,"nodeType":"164","messageId":"165","endLine":24,"endColumn":28},{"ruleId":"143","severity":1,"message":"182","line":43,"column":5,"nodeType":"145","endLine":43,"endColumn":17,"suggestions":"183"},{"ruleId":"175","severity":1,"message":"184","line":48,"column":9,"nodeType":"177","messageId":"178","endLine":58,"endColumn":29,"fix":"185"},{"ruleId":"143","severity":1,"message":"186","line":105,"column":6,"nodeType":"145","endLine":105,"endColumn":18,"suggestions":"187"},{"ruleId":"143","severity":1,"message":"188","line":115,"column":6,"nodeType":"145","endLine":115,"endColumn":8,"suggestions":"189"},{"ruleId":"150","severity":1,"message":"151","line":121,"column":11,"nodeType":"152","endLine":121,"endColumn":56},{"ruleId":"150","severity":1,"message":"151","line":166,"column":15,"nodeType":"152","endLine":166,"endColumn":45},{"ruleId":"150","severity":1,"message":"151","line":194,"column":23,"nodeType":"152","endLine":201,"endColumn":24},{"ruleId":"143","severity":1,"message":"190","line":52,"column":6,"nodeType":"145","endLine":52,"endColumn":8,"suggestions":"191"},{"ruleId":"150","severity":1,"message":"151","line":74,"column":9,"nodeType":"152","endLine":74,"endColumn":33},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateUserData'. Either include it or remove the dependency array.","ArrayExpression",["192"],"React Hook useEffect has missing dependencies: 'getUserFriends' and 'socket'. Either include them or remove the dependency array.",["193"],["194"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'navigate' is assigned a value but never used.","Identifier","unusedVar","'params' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchPosts' and 'posts'. Either include them or remove the dependency array.",["195"],"React Hook useEffect has missing dependencies: 'isFriend', 'isIncoming', and 'props.user._id'. Either include them or remove the dependency array.",["196"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useNavigate' is defined but never used.","React Hook useEffect has missing dependencies: 'props.post.likes' and 'props.user._id'. Either include them or remove the dependency array. If 'setIsLiked' needs the current value of 'props.post.likes', you can also switch to useReducer instead of useState and read 'props.post.likes' in the reducer.",["197"],"React Hook useEffect has missing dependencies: 'fetchAuthor', 'fetchComments', and 'props.post.likes.length'. Either include them or remove the dependency array. If 'setLikes' needs the current value of 'props.post.likes.length', you can also switch to useReducer instead of useState and read 'props.post.likes.length' in the reducer.",["198"],"React Hook useEffect has a missing dependency: 'fetchAuthor'. Either include it or remove the dependency array.",["199"],"React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.",["200"],"no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"201","text":"202"},"React Hook useEffect has missing dependencies: 'fetchChat', 'markAsRead', and 'socket'. Either include them or remove the dependency array.",["203"],"React Hook useEffect has a missing dependency: 'joinRooms'. Either include it or remove the dependency array.",["204"],"Unexpected whitespace before property slice.",{"range":"205","text":"202"},"React Hook useEffect has a missing dependency: 'getUserFriendRequests'. Either include it or remove the dependency array.",["206"],"React Hook useEffect has missing dependencies: 'getUserFriendRequests' and 'socket'. Either include them or remove the dependency array.",["207"],"React Hook useEffect has missing dependencies: 'fetchChat', 'item', 'props', and 'socket'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["208"],{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},[1460,1469],".",{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},[1197,1208],{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},"Update the dependencies array to be: [updateUserData]",{"range":"237","text":"238"},"Update the dependencies array to be: [getUserFriends, socket, user]",{"range":"239","text":"240"},"Update the dependencies array to be: [updateUser, updateUserData]",{"range":"241","text":"242"},"Update the dependencies array to be: [fetchPosts, posts]",{"range":"243","text":"244"},"Update the dependencies array to be: [isFriend, isIncoming, params, props.user._id]",{"range":"245","text":"246"},"Update the dependencies array to be: [props.post.likes, props.user._id]",{"range":"247","text":"248"},"Update the dependencies array to be: [fetchAuthor, fetchComments, props.post.likes.length, update]",{"range":"249","text":"250"},"Update the dependencies array to be: [fetchAuthor]",{"range":"251","text":"252"},"Update the dependencies array to be: [params.id]",{"range":"253","text":"254"},"Update the dependencies array to be: [fetchChat, markAsRead, socket]",{"range":"255","text":"256"},"Update the dependencies array to be: [joinRooms, props.user]",{"range":"257","text":"258"},"Update the dependencies array to be: [getUserFriendRequests, props.user]",{"range":"259","text":"260"},"Update the dependencies array to be: [getUserFriendRequests, socket]",{"range":"261","text":"262"},"Update the dependencies array to be: [fetchChat, item, props, socket]",{"range":"263","text":"264"},[3133,3135],"[updateUserData]",[3297,3303],"[getUserFriends, socket, user]",[3380,3392],"[updateUser, updateUserData]",[1335,1337],"[fetchPosts, posts]",[1227,1235],"[isFriend, isIncoming, params, props.user._id]",[1719,1721],"[props.post.likes, props.user._id]",[1847,1855],"[fetchAuthor, fetchComments, props.post.likes.length, update]",[473,475],"[fetchAuthor]",[2293,2295],"[params.id]",[2426,2428],"[fetchChat, markAsRead, socket]",[853,865],"[joinRooms, props.user]",[2487,2499],"[getUserFriendRequests, props.user]",[2686,2688],"[getUserFriendRequests, socket]",[1254,1256],"[fetchChat, item, props, socket]"]