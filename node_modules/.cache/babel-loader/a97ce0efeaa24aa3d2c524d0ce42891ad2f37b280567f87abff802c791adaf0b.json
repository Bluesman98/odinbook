{"ast":null,"code":"var _jsxFileName = \"/home/bluesman/repos/odin-book/odin-book/src/components/EditPost.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditPost(props) {\n  _s();\n  const params = useParams();\n  const [content, setContent] = useState(props.postContent);\n  async function updatePost(content) {\n    await fetch(`http://localhost:3000/post/${props.post_id}/update?content=${content}`, {\n      method: \"PUT\"\n    });\n    updatePosts(props.post_id, content);\n    props.closeModal();\n    window.location.reload(false);\n  }\n  async function deletePost() {\n    await fetch(`http://localhost:3000/post/${props.post_id}/delete`, {\n      method: \"DELETE\"\n    });\n    removePost(props.post_id);\n    props.closeModal();\n    window.location.reload(false);\n  }\n\n  // Update posts state\n  function updatePosts(post_id, content) {\n    let temp = [...props.posts];\n    temp.map(i => {\n      if (i._id === post_id) {\n        i.content = content;\n        props.setPosts(temp);\n      }\n    });\n  }\n\n  // remove post from  posts state\n  function removePost(post_id) {\n    props.setPosts(props.posts.filter(function (item) {\n      return item._id !== post_id;\n    }));\n  }\n  const handleSubmit = event => {\n    event.target.reset();\n    event.preventDefault(); // üëàÔ∏è prevent page refresh\n\n    updatePost(content);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"EditPost\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"post-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        placeholder: \"Write something...\",\n        name: \"content\",\n        required: true,\n        onChange: event => setContent(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          deletePost();\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(EditPost, \"U8qBJYLdUgKIFHwFg53C4DUW3ds=\", false, function () {\n  return [useParams];\n});\n_c = EditPost;\nexport default EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["useEffect","useState","useNavigate","useParams","EditPost","props","params","content","setContent","postContent","updatePost","fetch","post_id","method","updatePosts","closeModal","window","location","reload","deletePost","removePost","temp","posts","map","i","_id","setPosts","filter","item","handleSubmit","event","target","reset","preventDefault","value"],"sources":["/home/bluesman/repos/odin-book/odin-book/src/components/EditPost.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nfunction EditPost(props) {\n  const params = useParams()\n  \n  const [content, setContent] = useState(props.postContent);\n\n  async function updatePost(content) {\n    await fetch(\n      `http://localhost:3000/post/${props.post_id}/update?content=${content}`,\n      {\n        method: \"PUT\",\n      }\n    );\n    updatePosts(props.post_id, content);\n    props.closeModal();\n    window.location.reload(false)\n  }\n\n  async function deletePost() {\n    await fetch(`http://localhost:3000/post/${props.post_id}/delete`, {\n      method: \"DELETE\",\n    });\n    removePost(props.post_id);\n    props.closeModal();\n    window.location.reload(false)\n  }\n\n  // Update posts state\n  function updatePosts(post_id, content) {\n    let temp = [...props.posts];\n    temp.map((i) => {\n      if (i._id === post_id) {\n        i.content = content;\n        props.setPosts(temp);\n      }\n    });\n  }\n\n  // remove post from  posts state\n  function removePost(post_id) {\n    props.setPosts(\n      props.posts.filter(function (item) {\n        return item._id !== post_id;\n      })\n    );\n  }\n\n  const handleSubmit = (event) => {\n    event.target.reset();\n    event.preventDefault(); // üëàÔ∏è prevent page refresh\n\n    updatePost(content);\n  };\n\n  return (\n    <div className=\"EditPost\">\n<form className=\"post-form\" onSubmit={handleSubmit}>\n          <label htmlFor=\"content\"></label>\n          <textarea\n            value={content}\n            placeholder=\"Write something...\"\n            name=\"content\"\n            required\n            onChange={(event) => setContent(event.target.value)}\n          ></textarea>\n          <button\n            onClick={() => {\n              deletePost();\n            }}\n          >\n            Delete\n          </button>\n          <button type=\"submit\">Submit</button>\n        </form>\n          \n    </div>\n  );\n}\n\nexport default EditPost;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAAC;AAE1D,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA;EACvB,MAAMC,MAAM,GAAGH,SAAS,EAAE;EAE1B,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAACI,KAAK,CAACI,WAAW,CAAC;EAEzD,eAAeC,UAAU,CAACH,OAAO,EAAE;IACjC,MAAMI,KAAK,CACR,8BAA6BN,KAAK,CAACO,OAAQ,mBAAkBL,OAAQ,EAAC,EACvE;MACEM,MAAM,EAAE;IACV,CAAC,CACF;IACDC,WAAW,CAACT,KAAK,CAACO,OAAO,EAAEL,OAAO,CAAC;IACnCF,KAAK,CAACU,UAAU,EAAE;IAClBC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,KAAK,CAAC;EAC/B;EAEA,eAAeC,UAAU,GAAG;IAC1B,MAAMR,KAAK,CAAE,8BAA6BN,KAAK,CAACO,OAAQ,SAAQ,EAAE;MAChEC,MAAM,EAAE;IACV,CAAC,CAAC;IACFO,UAAU,CAACf,KAAK,CAACO,OAAO,CAAC;IACzBP,KAAK,CAACU,UAAU,EAAE;IAClBC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,KAAK,CAAC;EAC/B;;EAEA;EACA,SAASJ,WAAW,CAACF,OAAO,EAAEL,OAAO,EAAE;IACrC,IAAIc,IAAI,GAAG,CAAC,GAAGhB,KAAK,CAACiB,KAAK,CAAC;IAC3BD,IAAI,CAACE,GAAG,CAAEC,CAAC,IAAK;MACd,IAAIA,CAAC,CAACC,GAAG,KAAKb,OAAO,EAAE;QACrBY,CAAC,CAACjB,OAAO,GAAGA,OAAO;QACnBF,KAAK,CAACqB,QAAQ,CAACL,IAAI,CAAC;MACtB;IACF,CAAC,CAAC;EACJ;;EAEA;EACA,SAASD,UAAU,CAACR,OAAO,EAAE;IAC3BP,KAAK,CAACqB,QAAQ,CACZrB,KAAK,CAACiB,KAAK,CAACK,MAAM,CAAC,UAAUC,IAAI,EAAE;MACjC,OAAOA,IAAI,CAACH,GAAG,KAAKb,OAAO;IAC7B,CAAC,CAAC,CACH;EACH;EAEA,MAAMiB,YAAY,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,MAAM,CAACC,KAAK,EAAE;IACpBF,KAAK,CAACG,cAAc,EAAE,CAAC,CAAC;;IAExBvB,UAAU,CAACH,OAAO,CAAC;EACrB,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,UAAU;IAAA,uBAC7B;MAAM,SAAS,EAAC,WAAW;MAAC,QAAQ,EAAEsB,YAAa;MAAA,wBACzC;QAAO,OAAO,EAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAS,eACjC;QACE,KAAK,EAAEtB,OAAQ;QACf,WAAW,EAAC,oBAAoB;QAChC,IAAI,EAAC,SAAS;QACd,QAAQ;QACR,QAAQ,EAAGuB,KAAK,IAAKtB,UAAU,CAACsB,KAAK,CAACC,MAAM,CAACG,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAC1C,eACZ;QACE,OAAO,EAAE,MAAM;UACbf,UAAU,EAAE;QACd,CAAE;QAAA,UACH;MAED;QAAA;QAAA;QAAA;MAAA,QAAS,eACT;QAAQ,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EAChC;IAAA;IAAA;IAAA;EAAA,QAEL;AAEV;AAAC,GA5EQf,QAAQ;EAAA,QACAD,SAAS;AAAA;AAAA,KADjBC,QAAQ;AA8EjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}