{"ast":null,"code":"var _jsxFileName = \"/home/bluesman/repos/odin-book/odin-book/src/components/Timeline.js\",\n  _s = $RefreshSig$();\nimport Post from \"./Post\";\nimport { useEffect, useState } from \"react\";\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\";\nimport React from \"react\";\nimport Modal from \"react-modal\";\nimport CreatePost from \"./CreatePost\";\nimport EditPost from \"./EditPost\";\nimport \"../styles/Timeline.css\";\nimport Contacts from \"./Contacts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\"\n  }\n};\nfunction Timeline(props) {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [postContent, setPostContent] = useState(\"\");\n  const [post_id, setPost_id] = useState(null);\n  const [modalType, setModalType] = useState(\"edit\");\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  const navigate = useNavigate();\n  const params = useParams();\n  async function fetchPosts() {\n    await fetch(`http://localhost:3000/user/${props.user._id}/timeline-posts`).then(res => {\n      return res.json();\n    }).then(data => {\n      setPosts(data);\n    });\n  }\n  useEffect(() => {\n    console.log(\"Timeline\");\n    fetchPosts();\n    // Sort\n    let posts_sorted = [...posts];\n    posts_sorted.sort((a, b) => a.date - b.date ? -1 : 1);\n    setPosts(posts_sorted);\n  }, []);\n  function openModal() {\n    setIsOpen(true);\n  }\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n  }\n  function closeModal() {\n    setModalType(\"edit\");\n    setIsOpen(false);\n  }\n  if (props.user === null) return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: process.env.PUBLIC_URL + \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Timeline\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setModalType(\"create\");\n          openModal();\n        },\n        children: \"New Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), posts !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: posts.map((data, i) => {\n          return /*#__PURE__*/_jsxDEV(Post, {\n            user: props.user,\n            post: data,\n            openModal: openModal,\n            setPostContent: setPostContent,\n            setPost_id: setPost_id\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Contacts, {\n      user: props.user,\n      friends: props.friends,\n      setChatList: props.setChatList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onAfterOpen: afterOpenModal,\n      onRequestClose: closeModal,\n      style: customStyles,\n      contentLabel: \"Example Modal\",\n      ariaHideApp: false,\n      children: [modalType === \"edit\" && /*#__PURE__*/_jsxDEV(EditPost, {\n        postContent: postContent,\n        post_id: post_id,\n        posts: posts,\n        setPosts: setPosts,\n        closeModal: closeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), modalType === \"create\" && /*#__PURE__*/_jsxDEV(CreatePost, {\n        user: props.user,\n        setPosts: setPosts,\n        closeModal: closeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(Timeline, \"WDlcYHQUmlnMXXkQuHLvJcFKXvU=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Timeline;\nexport default _c2 = /*#__PURE__*/React.memo(Timeline);\nvar _c, _c2;\n$RefreshReg$(_c, \"Timeline\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["Post","useEffect","useState","Navigate","useNavigate","useParams","React","Modal","CreatePost","EditPost","Contacts","customStyles","content","top","left","right","bottom","marginRight","transform","Timeline","props","posts","setPosts","postContent","setPostContent","post_id","setPost_id","modalType","setModalType","modalIsOpen","setIsOpen","navigate","params","fetchPosts","fetch","user","_id","then","res","json","data","console","log","posts_sorted","sort","a","b","date","openModal","afterOpenModal","closeModal","process","env","PUBLIC_URL","map","i","friends","setChatList","memo"],"sources":["/home/bluesman/repos/odin-book/odin-book/src/components/Timeline.js"],"sourcesContent":["import Post from \"./Post\";\nimport { useEffect, useState } from \"react\";\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\";\nimport React from \"react\";\nimport Modal from \"react-modal\";\nimport CreatePost from \"./CreatePost\";\nimport EditPost from \"./EditPost\";\nimport \"../styles/Timeline.css\";\nimport Contacts from \"./Contacts\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\n\nfunction Timeline(props) {\n  const [posts, setPosts] = useState([]);\n  const [postContent, setPostContent] = useState(\"\");\n  const [post_id, setPost_id] = useState(null);\n  const [modalType, setModalType] = useState(\"edit\");\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  const navigate = useNavigate();\n  const params = useParams();\n\n  async function fetchPosts() {\n    await fetch(`http://localhost:3000/user/${props.user._id}/timeline-posts`)\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        setPosts(data)\n      });\n  }\n\n  useEffect(() => {\n    console.log(\"Timeline\")\n    fetchPosts();\n    // Sort\n    let posts_sorted = [...posts];\n    posts_sorted.sort((a,b) => a.date - b.date ? -1 : 1);\n    setPosts(posts_sorted)\n  }, [] );\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n  }\n\n  function closeModal() {\n    setModalType(\"edit\");\n    setIsOpen(false);\n  }\n\n  if (props.user === null)\n    return <Navigate to={process.env.PUBLIC_URL + \"/login\"} />;\n\n  return (\n    <div className=\"Timeline\">\n      <div className=\"posts\">\n        <button\n          onClick={() => {\n            setModalType(\"create\");\n            openModal();\n          }}\n        >\n          New Post\n        </button>\n        {posts !== null &&<div >{\n          posts.map((data, i) => {\n            return (\n              <Post\n                user={props.user}\n                post={data}\n                key={i}\n                openModal={openModal}\n                setPostContent={setPostContent}\n                setPost_id={setPost_id}\n              />\n            );\n          })}</div>}\n      </div>\n      <Contacts user={props.user} friends={props.friends} setChatList={props.setChatList} />\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Example Modal\"\n        ariaHideApp={false}\n      >\n        {modalType === \"edit\" && (\n          <EditPost\n            postContent={postContent}\n            post_id={post_id}\n            posts={posts}\n            setPosts={setPosts}\n            closeModal={closeModal}\n          />\n        )}\n        {modalType === \"create\" && (\n          <CreatePost\n            user={props.user}\n            setPosts={setPosts}\n            closeModal={closeModal}\n          />\n        )}\n      </Modal>\n    </div>\n  );\n}\n\nexport default React.memo(Timeline);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}