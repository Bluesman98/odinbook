{"ast":null,"code":"var _jsxFileName = \"/home/bluesman/repos/odin-book/odin-book/src/components/CreatePost.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreatePost(props) {\n  _s();\n  const [content, setContent] = useState(\"\");\n  async function postBlogPost() {\n    try {\n      await fetch(`http://localhost:3000/post/create?user=${props.user._id}`, {\n        method: \"POST\",\n        body: JSON.stringify({\n          content: content\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => {\n        return res.json();\n      }).then(data => {\n        //add the new post to posts state\n        props.setPosts(array => [data, ...array]);\n        props.closeModal();\n        window.location.reload(false);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  const handleSubmit = event => {\n    event.target.reset();\n    event.preventDefault(); // üëàÔ∏è prevent page refresh\n    postBlogPost();\n    ;\n    setContent(\"\");\n    // üëáÔ∏è clear all input values in the form\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CreatePost\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"post-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Write something...\",\n        name: \"content\",\n        required: true,\n        onChange: event => setContent(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(CreatePost, \"KPwtwb4lt1NZxOwnjhyyIoKb9lQ=\");\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["useState","CreatePost","props","content","setContent","postBlogPost","fetch","user","_id","method","body","JSON","stringify","headers","then","res","json","data","setPosts","array","closeModal","window","location","reload","error","console","log","handleSubmit","event","target","reset","preventDefault","value"],"sources":["/home/bluesman/repos/odin-book/odin-book/src/components/CreatePost.js"],"sourcesContent":["import {useState } from \"react\";\n\nfunction CreatePost(props) {\n  \n  const [content, setContent] = useState(\"\");\n\n  async function postBlogPost() {\n    try { await fetch(\n      `http://localhost:3000/post/create?user=${props.user._id}`,\n      {\n        method: \"POST\", \n        body:  JSON.stringify({\n          content: content,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    ).then((res) => {\n      return res.json();\n    })\n    .then((data) => {\n      //add the new post to posts state\n      props.setPosts((array) => [data, ...array]);\n     \n      props.closeModal()\n      window.location.reload(false)\n    });\n   \n}\n    catch(error){\n      console.log(error)\n    }\n  }\n\n  const handleSubmit = (event) => {\n    event.target.reset();\n    event.preventDefault(); // üëàÔ∏è prevent page refresh\n    postBlogPost();;\n    setContent(\"\");\n    // üëáÔ∏è clear all input values in the form\n  };\n\n  return (\n    <div className=\"CreatePost\">\n<form className=\"post-form\" onSubmit={handleSubmit}>\n            <label htmlFor=\"content\"></label>\n            <textarea\n              placeholder=\"Write something...\"\n              name=\"content\"\n              required\n              onChange={(event) => setContent(event.target.value)}\n            ></textarea>\n            <button type=\"submit\">Submit</button>\n          </form>\n    </div>\n  );\n}\n\nexport default CreatePost;"],"mappings":";;AAAA,SAAQA,QAAQ,QAAQ,OAAO;AAAC;AAEhC,SAASC,UAAU,CAACC,KAAK,EAAE;EAAA;EAEzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAE1C,eAAeK,YAAY,GAAG;IAC5B,IAAI;MAAE,MAAMC,KAAK,CACd,0CAAyCJ,KAAK,CAACK,IAAI,CAACC,GAAI,EAAC,EAC1D;QACEC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAGC,IAAI,CAACC,SAAS,CAAC;UACpBT,OAAO,EAAEA;QACX,CAAC,CAAC;QACFU,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CACF,CAACC,IAAI,CAAEC,GAAG,IAAK;QACd,OAAOA,GAAG,CAACC,IAAI,EAAE;MACnB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;QACd;QACAf,KAAK,CAACgB,QAAQ,CAAEC,KAAK,IAAK,CAACF,IAAI,EAAE,GAAGE,KAAK,CAAC,CAAC;QAE3CjB,KAAK,CAACkB,UAAU,EAAE;QAClBC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,KAAK,CAAC;MAC/B,CAAC,CAAC;IAEN,CAAC,CACG,OAAMC,KAAK,EAAC;MACVC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF;EAEA,MAAMG,YAAY,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,MAAM,CAACC,KAAK,EAAE;IACpBF,KAAK,CAACG,cAAc,EAAE,CAAC,CAAC;IACxB1B,YAAY,EAAE;IAAC;IACfD,UAAU,CAAC,EAAE,CAAC;IACd;EACF,CAAC;;EAED,oBACE;IAAK,SAAS,EAAC,YAAY;IAAA,uBAC/B;MAAM,SAAS,EAAC,WAAW;MAAC,QAAQ,EAAEuB,YAAa;MAAA,wBACvC;QAAO,OAAO,EAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAS,eACjC;QACE,WAAW,EAAC,oBAAoB;QAChC,IAAI,EAAC,SAAS;QACd,QAAQ;QACR,QAAQ,EAAGC,KAAK,IAAKxB,UAAU,CAACwB,KAAK,CAACC,MAAM,CAACG,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAC1C,eACZ;QAAQ,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EAChC;IAAA;IAAA;IAAA;EAAA,QACP;AAEV;AAAC,GAvDQ/B,UAAU;AAAA,KAAVA,UAAU;AAyDnB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}