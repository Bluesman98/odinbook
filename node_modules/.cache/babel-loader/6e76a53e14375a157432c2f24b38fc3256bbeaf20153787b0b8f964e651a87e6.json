{"ast":null,"code":"var _jsxFileName = \"/home/bluesman/repos/odin-book/odin-book/src/components/ContactItem.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useContext } from \"react\";\nimport { SocketContext } from './socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ContactItem(props) {\n  _s();\n  const socket = useContext(SocketContext);\n  const item = props.item;\n  const [chat, setChat] = useState(null);\n  const [unreadMessages, setUnreadMessages] = useState(0);\n  async function fetchChat(item) {\n    try {\n      await fetch(`http://localhost:3000/chat/find?users=${props.user._id}&users=${item._id}`).then(res => {\n        return res.json();\n      }).then(data => {\n        setChat(data);\n        if (data.messages.length) {\n          setUnreadMessages(data.messages.filter(item => !item.read_by.includes(props.user._id)).length);\n        }\n      });\n    } catch (error) {}\n  }\n  async function markAllAsRead() {\n    await fetch(`http://localhost:3000/chat/${chat._id}/read-all?user_id=${props.user._id}`, {\n      method: \"PUT\"\n    }).then(res => {\n      return res.json();\n    }).then(data => {\n      console.log(data);\n    });\n  }\n  useEffect(() => {\n    if (item) fetchChat(item);\n    socket.on(\"receive_message\", data => {\n      fetchChat(item);\n    });\n    return () => {\n      socket.off(\"receive_message\");\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ContactItem\",\n    onClick: () => {\n      if (!props.isInChatList(item._id)) {\n        props.setChatList(current => [...current, {\n          id: item._id,\n          name: item.first_name + \" \" + item.last_name,\n          img_url: item.img_url,\n          chat_id: chat._id\n        }]);\n        markAllAsRead();\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: item.img_url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [item.first_name + \" \" + item.last_name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), unreadMessages > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert\",\n        children: [unreadMessages, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(ContactItem, \"UgBkK7mubFACUh7l8jvSsRyVF9I=\");\n_c = ContactItem;\nexport default ContactItem;\nvar _c;\n$RefreshReg$(_c, \"ContactItem\");","map":{"version":3,"names":["useEffect","useState","useContext","SocketContext","ContactItem","props","socket","item","chat","setChat","unreadMessages","setUnreadMessages","fetchChat","fetch","user","_id","then","res","json","data","messages","length","filter","read_by","includes","error","markAllAsRead","method","console","log","on","off","isInChatList","setChatList","current","id","name","first_name","last_name","img_url","chat_id"],"sources":["/home/bluesman/repos/odin-book/odin-book/src/components/ContactItem.js"],"sourcesContent":["import { useEffect, useState, useContext } from \"react\";\nimport {SocketContext} from './socket';\n\nfunction ContactItem(props) {\n\n  const socket = useContext(SocketContext);\n\n  const item = props.item;\n\n  const [chat, setChat] = useState(null);\n  const [unreadMessages, setUnreadMessages] = useState(0);\n\n  async function fetchChat(item) {\n    try {\n      await fetch(\n        `http://localhost:3000/chat/find?users=${props.user._id}&users=${item._id}`\n      )\n        .then((res) => {\n          return res.json();\n        })\n        .then((data) => {\n         setChat(data);\n         if(data.messages.length){\n         setUnreadMessages(\n            data.messages.filter((item) => !item.read_by.includes(props.user._id))\n              .length\n          )}\n        });\n    } catch (error) {\n    }\n  }\n\n  async function markAllAsRead() {\n    await fetch(\n     `http://localhost:3000/chat/${chat._id}/read-all?user_id=${props.user._id}`,\n     {\n       method: \"PUT\",\n     }\n   )        .then((res) => {\n     return res.json();\n   })\n   .then((data) => {\n     console.log(data)\n   });\n }  \n\n  useEffect(() => {\n    if(item)fetchChat(item);\n\n    socket.on(\"receive_message\", (data) => {\n        fetchChat(item)\n       });\n   \n       return () => {\n         socket.off(\"receive_message\");\n       };\n  }, []);\n\n  return (\n    <div\n      className=\"ContactItem\"\n      onClick={() => {\n        if (!props.isInChatList(item._id)) {\n          props.setChatList((current) => [\n            ...current,\n            {\n              id: item._id,\n              name: item.first_name + \" \" + item.last_name,\n              img_url: item.img_url,\n              chat_id: chat._id,\n            },\n          ]);\n          markAllAsRead();\n        }\n      }}\n    >\n      <div className=\"user\">\n        <img src={item.img_url}></img>\n        <div>{item.first_name + \" \" + item.last_name} </div>\n        { unreadMessages>0 && <div className=\"alert\">{unreadMessages} </div>}\n      </div>\n    </div>\n  );\n}\n\nexport default ContactItem;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACvD,SAAQC,aAAa,QAAO,UAAU;AAAC;AAEvC,SAASC,WAAW,CAACC,KAAK,EAAE;EAAA;EAE1B,MAAMC,MAAM,GAAGJ,UAAU,CAACC,aAAa,CAAC;EAExC,MAAMI,IAAI,GAAGF,KAAK,CAACE,IAAI;EAEvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAEvD,eAAeW,SAAS,CAACL,IAAI,EAAE;IAC7B,IAAI;MACF,MAAMM,KAAK,CACR,yCAAwCR,KAAK,CAACS,IAAI,CAACC,GAAI,UAASR,IAAI,CAACQ,GAAI,EAAC,CAC5E,CACEC,IAAI,CAAEC,GAAG,IAAK;QACb,OAAOA,GAAG,CAACC,IAAI,EAAE;MACnB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;QACfV,OAAO,CAACU,IAAI,CAAC;QACb,IAAGA,IAAI,CAACC,QAAQ,CAACC,MAAM,EAAC;UACxBV,iBAAiB,CACdQ,IAAI,CAACC,QAAQ,CAACE,MAAM,CAAEf,IAAI,IAAK,CAACA,IAAI,CAACgB,OAAO,CAACC,QAAQ,CAACnB,KAAK,CAACS,IAAI,CAACC,GAAG,CAAC,CAAC,CACnEM,MAAM,CACV;QAAA;MACH,CAAC,CAAC;IACN,CAAC,CAAC,OAAOI,KAAK,EAAE,CAChB;EACF;EAEA,eAAeC,aAAa,GAAG;IAC7B,MAAMb,KAAK,CACT,8BAA6BL,IAAI,CAACO,GAAI,qBAAoBV,KAAK,CAACS,IAAI,CAACC,GAAI,EAAC,EAC3E;MACEY,MAAM,EAAE;IACV,CAAC,CACF,CAASX,IAAI,CAAEC,GAAG,IAAK;MACtB,OAAOA,GAAG,CAACC,IAAI,EAAE;IACnB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;MACdS,OAAO,CAACC,GAAG,CAACV,IAAI,CAAC;IACnB,CAAC,CAAC;EACJ;EAECnB,SAAS,CAAC,MAAM;IACd,IAAGO,IAAI,EAACK,SAAS,CAACL,IAAI,CAAC;IAEvBD,MAAM,CAACwB,EAAE,CAAC,iBAAiB,EAAGX,IAAI,IAAK;MACnCP,SAAS,CAACL,IAAI,CAAC;IAChB,CAAC,CAAC;IAEF,OAAO,MAAM;MACXD,MAAM,CAACyB,GAAG,CAAC,iBAAiB,CAAC;IAC/B,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IACE,SAAS,EAAC,aAAa;IACvB,OAAO,EAAE,MAAM;MACb,IAAI,CAAC1B,KAAK,CAAC2B,YAAY,CAACzB,IAAI,CAACQ,GAAG,CAAC,EAAE;QACjCV,KAAK,CAAC4B,WAAW,CAAEC,OAAO,IAAK,CAC7B,GAAGA,OAAO,EACV;UACEC,EAAE,EAAE5B,IAAI,CAACQ,GAAG;UACZqB,IAAI,EAAE7B,IAAI,CAAC8B,UAAU,GAAG,GAAG,GAAG9B,IAAI,CAAC+B,SAAS;UAC5CC,OAAO,EAAEhC,IAAI,CAACgC,OAAO;UACrBC,OAAO,EAAEhC,IAAI,CAACO;QAChB,CAAC,CACF,CAAC;QACFW,aAAa,EAAE;MACjB;IACF,CAAE;IAAA,uBAEF;MAAK,SAAS,EAAC,MAAM;MAAA,wBACnB;QAAK,GAAG,EAAEnB,IAAI,CAACgC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAO,eAC9B;QAAA,WAAMhC,IAAI,CAAC8B,UAAU,GAAG,GAAG,GAAG9B,IAAI,CAAC+B,SAAS,EAAC,GAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,EAClD5B,cAAc,GAAC,CAAC,iBAAI;QAAK,SAAS,EAAC,OAAO;QAAA,WAAEA,cAAc,EAAC,GAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA;EAChE;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAhFQN,WAAW;AAAA,KAAXA,WAAW;AAkFpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}