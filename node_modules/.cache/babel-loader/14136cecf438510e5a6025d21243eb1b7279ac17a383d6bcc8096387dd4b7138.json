{"ast":null,"code":"var _jsxFileName = \"/home/bluesman/repos/odin-book/odin-book/src/components/ContactItem.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ContactItem(props) {\n  _s();\n  const item = props.item;\n  const [chat, setChat] = useState(null);\n  const [unreadMessages, setUnreadMessages] = useState(0);\n  async function fetchChat(item) {\n    try {\n      await fetch(`http://localhost:3000/chat/find?users=${props.user._id}&users=${item._id}`).then(res => {\n        return res.json();\n      }).then(data => {\n        setChat(data);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  useEffect(() => {\n    fetchChat(item);\n  }, []);\n  useEffect(() => {\n    if (chat !== null) {\n      setUnreadMessages(chat.messages.filter(item => !item.read_by.includes(props.user._id)).length);\n    }\n  }, [chat]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ContactItem\",\n    onClick: () => {\n      if (!props.isInChatList(item._id)) {\n        props.setChatList(current => [...current, {\n          id: item._id,\n          name: item.first_name + \" \" + item.last_name,\n          img_url: item.img_url,\n          chat_id: chat._id\n        }]);\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: item.img_url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [item.first_name + \" \" + item.last_name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [unreadMessages, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(ContactItem, \"BGqoGr7DaGSq0YCiC/xunT80hqk=\");\n_c = ContactItem;\nexport default ContactItem;\nvar _c;\n$RefreshReg$(_c, \"ContactItem\");","map":{"version":3,"names":["useEffect","useState","ContactItem","props","item","chat","setChat","unreadMessages","setUnreadMessages","fetchChat","fetch","user","_id","then","res","json","data","error","console","log","messages","filter","read_by","includes","length","isInChatList","setChatList","current","id","name","first_name","last_name","img_url","chat_id"],"sources":["/home/bluesman/repos/odin-book/odin-book/src/components/ContactItem.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction ContactItem(props) {\n\n    const item=props.item\n\n    const [chat, setChat] = useState(null);\n    const [unreadMessages, setUnreadMessages] = useState(0);\n\n    async function fetchChat(item) {\n        try {\n          await fetch(\n            `http://localhost:3000/chat/find?users=${props.user._id}&users=${item._id}`\n          )\n            .then((res) => {\n              return res.json();\n            })\n            .then((data) => {\n                setChat(data)\n            });\n        } catch (error) {\n          console.log(error);\n        }\n      }\n\n      useEffect(()=>{\n        fetchChat(item)\n      },[])\n\n      useEffect(()=>{\n        if(chat !== null){\n        setUnreadMessages(chat.messages.filter(item => !item.read_by.includes(props.user._id)).length);    \n    }\n      },[chat])\n      \n  return (\n    <div\n      className=\"ContactItem\"\n      onClick={() => {\n        if (!props.isInChatList(item._id)) {\n            props.setChatList((current) => [\n                ...current,\n                {\n                  id: item._id,\n                  name: item.first_name + \" \" + item.last_name,\n                  img_url: item.img_url,\n                  chat_id:  chat._id\n                },\n              ]);\n        }\n      }}\n    >\n      <div className=\"user\">\n        <img src={item.img_url}></img>\n        <div>{item.first_name + \" \" + item.last_name} </div>\n        <div>{unreadMessages} </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ContactItem;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAE5C,SAASC,WAAW,CAACC,KAAK,EAAE;EAAA;EAExB,MAAMC,IAAI,GAACD,KAAK,CAACC,IAAI;EAErB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACM,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAEvD,eAAeQ,SAAS,CAACL,IAAI,EAAE;IAC3B,IAAI;MACF,MAAMM,KAAK,CACR,yCAAwCP,KAAK,CAACQ,IAAI,CAACC,GAAI,UAASR,IAAI,CAACQ,GAAI,EAAC,CAC5E,CACEC,IAAI,CAAEC,GAAG,IAAK;QACb,OAAOA,GAAG,CAACC,IAAI,EAAE;MACnB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;QACZV,OAAO,CAACU,IAAI,CAAC;MACjB,CAAC,CAAC;IACN,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF;EAEAjB,SAAS,CAAC,MAAI;IACZS,SAAS,CAACL,IAAI,CAAC;EACjB,CAAC,EAAC,EAAE,CAAC;EAELJ,SAAS,CAAC,MAAI;IACZ,IAAGK,IAAI,KAAK,IAAI,EAAC;MACjBG,iBAAiB,CAACH,IAAI,CAACe,QAAQ,CAACC,MAAM,CAACjB,IAAI,IAAI,CAACA,IAAI,CAACkB,OAAO,CAACC,QAAQ,CAACpB,KAAK,CAACQ,IAAI,CAACC,GAAG,CAAC,CAAC,CAACY,MAAM,CAAC;IAClG;EACE,CAAC,EAAC,CAACnB,IAAI,CAAC,CAAC;EAEb,oBACE;IACE,SAAS,EAAC,aAAa;IACvB,OAAO,EAAE,MAAM;MACb,IAAI,CAACF,KAAK,CAACsB,YAAY,CAACrB,IAAI,CAACQ,GAAG,CAAC,EAAE;QAC/BT,KAAK,CAACuB,WAAW,CAAEC,OAAO,IAAK,CAC3B,GAAGA,OAAO,EACV;UACEC,EAAE,EAAExB,IAAI,CAACQ,GAAG;UACZiB,IAAI,EAAEzB,IAAI,CAAC0B,UAAU,GAAG,GAAG,GAAG1B,IAAI,CAAC2B,SAAS;UAC5CC,OAAO,EAAE5B,IAAI,CAAC4B,OAAO;UACrBC,OAAO,EAAG5B,IAAI,CAACO;QACjB,CAAC,CACF,CAAC;MACR;IACF,CAAE;IAAA,uBAEF;MAAK,SAAS,EAAC,MAAM;MAAA,wBACnB;QAAK,GAAG,EAAER,IAAI,CAAC4B;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAO,eAC9B;QAAA,WAAM5B,IAAI,CAAC0B,UAAU,GAAG,GAAG,GAAG1B,IAAI,CAAC2B,SAAS,EAAC,GAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,eACpD;QAAA,WAAMxB,cAAc,EAAC,GAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA;EACxB;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAzDQL,WAAW;AAAA,KAAXA,WAAW;AA2DpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}